function GetSplitChunkSize(a, b) {
    if (1 === b) return a;
    var c = Math.ceil(a / b), d = a - c;
    return [ c ].concat(GetSplitChunkSize(d, b - 1));
}

function SplitArrayIntoN(a, b) {
    for (var c = [], d = GetSplitChunkSize(a.length, b), e = 0, f = 0, g = 0; b > g; g++) e += 0 === g ? 0 : d[g - 1], 
    f += d[g], c.push(a.slice(e, f));
    return c;
}

function GetRandomInt(a, b) {
    return Math.floor(Math.random() * (b - a + 1)) + a;
}

function IsTouch() {
    var a = !1;
    return ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch) && (a = !0), 
    a;
}

function DisplayScrollToTop() {
    var a = $(window).scrollTop();
    a > 200 ? $topAnchor.fadeIn() : $topAnchor.hide();
}

function ScrollToTop() {
    return $("html, body").animate({
        scrollTop: 0
    }, 500), !1;
}

function ScrollToAnchor(a) {
    var b = $("#" + a), c = -3;
    return "fixed" === $menu.css("position") && (c += $menu.height()), "fixed" === $astralBanner.css("position") && (c += $astralBanner.height()), 
    null !== $wpAdminBar && (c += $wpAdminBar.height()), $("html, body").animate({
        scrollTop: $(b).offset().top - c
    }, 500), !1;
}

function UpdateBackground() {
    var a = window.location.hash.split("/")[1], b = previousRoute.split("/")[1];
    if ("home" !== a || "home" !== b) {
        var c = GetRandomInt(0, $backgroundImages.length - 1), d = $backgroundImages[c].src;
        $body.css("background-image", "url('" + d + "')");
    }
}

function ClearTagCheckboxes() {
    $tags.find(".tagLabel").each(function() {
        $(this).removeClass("selected");
    }), $tags.find(".tagLabel").each(function() {
        $(this).removeClass("tagChecked");
    }), $tags.find(".tagLabel").each(function() {
        $(this).addClass("tagUnchecked");
    });
}

function RecordPreviousRoute(a) {
    previousRoute = window.location.hash;
}

function RouteProject(a) {
    UpdateBackground(), appVM.projectVM.slug(a), RecordPreviousRoute(), $menu.find(".menuItem:first-child").css({
        "background-color": "white",
        color: "black"
    }), $projectNode.style.display = "block", $homeNode.style.display = "none";
}

function RouteHome(a) {
    UpdateBackground(), appVM.projectVM.slug(null), RecordPreviousRoute(), $menu.find(".menuItem:first-child").css({
        "background-color": "black",
        color: "white"
    }), $projectNode.style.display = "none", $homeNode.style.display = "block", null !== a && "" !== a && void 0 !== a && ScrollToAnchor(a);
}

function Project(a, b, c, d, e, f, g) {
    var h = this;
    h.id = a, h.slug = b, h.name = c, h.description = d, h.tags = e, h.featureImage = f, 
    h.media = g, h.featureImageIsVisible = ko.observable(!1), h.showFeatureImage = function() {
        void 0 !== h.featureImage && null !== h.featureImage && "" !== h.featureImage && h.featureImageIsVisible(!IsTouch());
    }, h.hideFeatureImage = function() {
        h.featureImageIsVisible(!1);
    };
}

function Tag(a, b) {
    var c = this;
    c.id = a, c.name = b;
}

function Media(a, b, c, d) {
    var e = this;
    e.content = a, e.description = b, e.type = c, e.halfWidth = d;
}

function TagListViewModel(a) {
    var b = this;
    b.tags = ko.observableArray(), b.selectedTags = ko.observableArray(), b.tagLookup = {}, 
    jQuery.getJSON(serviceRoot + "/wp/v2/project_tag", null, function(a) {
        b.tags(jQuery.map(a, function(a) {
            return b.tagLookup[a.id] = new Tag(a.id, a.name), b.tagLookup[a.id];
        }));
    }), b.applyFilter = function() {
        a.projectListVM.updateSelectedProjectList();
    };
}

function ProjectListViewModel(a) {
    var b = 3, c = this;
    c.projects = ko.observableArray(), c.projectLookup = ko.observableArray(), c.selectedProjects = ko.observableArray(), 
    c.selectedTagsSummary = ko.observable(), jQuery.getJSON(serviceRoot + "/astral/v1/project", null, function(b) {
        c.projects(jQuery.map(b, function(b, d) {
            var e = jQuery.map(b.tags, function(b) {
                return a.tagListVM.tagLookup[b.id];
            });
            return c.projectLookup.push(b.slug), new Project(b.id, b.slug, b.name, null, e, b.featureImage[0], null);
        })), c.updateSelectedProjectList();
    }), c.updateSelectedProjectList = function() {
        if (a.tagListVM.selectedTags() && 0 !== a.tagListVM.selectedTags().length) {
            c.projectLookup([]);
            var d = ko.utils.arrayFilter(c.projects(), function(b) {
                var d = !1;
                return b.tags.forEach(function(e) {
                    -1 !== a.tagListVM.selectedTags().indexOf(e) && (c.projectLookup.push(b.slug), d = !0);
                }), d;
            });
            c.selectedProjects(SplitArrayIntoN(d, b)), c.selectedTagsSummary(c.updateSelectedTagsSummary());
        } else c.projectLookup([]), c.projects().forEach(function(a, b) {
            c.projectLookup.push(a.slug);
        }), c.selectedProjects(SplitArrayIntoN(c.projects(), b)), c.selectedTagsSummary("");
    }, c.updateSelectedTagsSummary = function() {
        var b = "Showing: ", c = a.tagListVM.selectedTags().map(function(a) {
            return '"' + a.name + '"';
        }).join(", ");
        return b += c;
    }, c.clearFilter = function() {
        a.tagListVM.selectedTags([]), c.updateSelectedProjectList(), ClearTagCheckboxes();
    };
}

function ProjectViewModel(a) {
    var b = this;
    b.slug = ko.observable(), b.next = ko.observable(), b.prev = ko.observable(), b.project = ko.observable();
    ko.computed(function() {
        var c = a.projectListVM.projectLookup(), d = b.slug();
        return 0 === c.length ? !1 : void 0 === d || null === d ? (b.project(new Project()), 
        !1) : (jQuery.getJSON(serviceRoot + "/astral/v1/project/" + d, null, function(e) {
            var f = jQuery.map(e.tags, function(b) {
                return a.tagListVM.tagLookup[b.id];
            }), g = jQuery.map(e.media, function(a) {
                return console.log(a), new Media(a.content, a.description, a.type, a.halfWidth);
            });
            _project = new Project(e.id, e.slug, e.name, e.description, f, null, g), b.project(_project);
            var h, i, j;
            c.forEach(function(a, b) {
                a === d && (h = b);
            }), 0 === h ? (i = 1, j = c.length - 1) : h === c.length - 1 ? (i = 0, j = c.length - 2) : (i = h + 1, 
            j = h - 1), b.next(c[i]), b.prev(c[j]);
        }), !1);
    });
}

function AppViewModel() {
    var a = this;
    a.tagListVM = new TagListViewModel(a), a.projectListVM = new ProjectListViewModel(a), 
    a.projectVM = new ProjectViewModel(a), a.visibleImageURL = ko.observable();
}

var $projectNode, $homeNode, $menu, $project, $topAnchor, $projectImage, $astralBanner, $wpAdminBar, $body, $backgroundImages, $tags, serviceRoot = "http://astr.nsur.org/wp-json", previousRoute = "", appVM = new AppViewModel(), backgroundImages = new Array();

$(function() {
    $projectNode = document.getElementById("project"), $homeNode = document.getElementById("home"), 
    $menu = jQuery(".menu"), $project = jQuery(".project"), $topAnchor = jQuery(".topAnchor"), 
    $projectImage = jQuery(".projectImage"), $astralBanner = jQuery(".astralBanner"), 
    $wpAdminBar = jQuery("#wpadminbar"), $body = jQuery("body"), $tags = jQuery(".tags"), 
    $backgroundImages = jQuery("#backgroundImages img"), ko.applyBindings(appVM, document.getElementById("content")), 
    UpdateBackground(), DisplayScrollToTop(), $(window).on("scroll", function() {
        DisplayScrollToTop();
    }), $topAnchor.on("click", ScrollToTop), $("#filterLabel").on("click", function() {
        $("#filterList").slideToggle();
    }), $("#filterApply").on("click", function() {
        $("#filterList").slideToggle();
    }), $menu.on("click", "li", function(a) {
        var b = a.currentTarget.children[0].hash.split("/")[2];
        return router.setRoute("home/" + b), !1;
    }), $tags.on("click", ".tagLabel", function() {
        $(this).toggleClass("selected"), $(this).hasClass("selected") ? ($(this).removeClass("tagUnchecked"), 
        $(this).addClass("tagChecked")) : ($(this).removeClass("tagChecked"), $(this).addClass("tagUnchecked"));
    }), $tags.on("mouseenter", ".tagLabel", function() {
        $(this).hasClass("selected") || ($(this).addClass("tagChecked"), $(this).removeClass("tagUnchecked"));
    }), $tags.on("mouseleave", ".tagLabel", function() {
        $(this).hasClass("selected") || ($(this).removeClass("tagChecked"), $(this).addClass("tagUnchecked"));
    }), router.configure(), router.init(), router.setRoute("home");
});

var router = Router({
    "/project": {
        "/:slug": {
            on: function(a) {
                RouteProject(a);
            }
        }
    },
    "/home": function() {
        RouteHome();
    },
    "/home/:anchor": function(a) {
        RouteHome(a);
    }
});